FORMAT: 1A
HOST: http://customerapi8.apiary.io

# Customer API
Basic API to manage Customers and Addresses


# Group Customers
Properties

| Name      | Type    | Description            |
|:----------|:--------|:-----------------------|
| id        | Integer | Customer unique ID     |
| name      | String  | Customer name          |
| email     | String  | Customer email         |
| dob       | Date    | Customer date of birth |
| phone     | String  | Customer phone number  |
| addresses | Array   | Customer addresses     |

    
## Customers Collection [/api/:version/customers]
Actions on the Customers resource
      
### Return a list of customers [GET]

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 1,
                    "name": "John Doe", 
                    "email": "john.doe@example.com",
                    "dob": "1970-01-01",
                    "phone": "555-555-5555",
                    "addresses": [
                        {
                            "id": 1,
                            "line1": "123 Foo Street",
                            "line2": "Suite 456",
                            "city": "Bar",
                            "state": "Baz",
                            "zip": "90210",
                            "customer_id": 1
                        }
                    ]
                }
            ]
      
### Create a new customer [POST]

+ Request (application/json)

    + Body

            {
                "name": "John Doe", 
                "email": "john.doe@example.com",
                "dob": "1970-01-01",
                "phone": "555-555-5555"
            }

+ Response 201 (application/json)

    + Body

            {
                "id": 1,
                "name": "John Doe", 
                "email": "john.doe@example.com",
                "dob": "1970-01-01",
                "phone": "555-555-5555",
                "addresses": []
            }
    
## Customers single [/api/:version/customers/:id]
Actions on the Customers resource
      
+ Parameters
    + id (required, number `1`) - the `id` of the `customer`
      
### Return customer by id [GET]

+ Response 200 (application/json)

    + Body

            {
                "id": 1,
                "name": "John Doe", 
                "email": "john.doe@example.com",
                "dob": "1970-01-01",
                "phone": "555-555-5555",
                "addresses": [
                    {
                        "id": 1,
                        "line1": "123 Foo Street",
                        "line2": "Suite 456",
                        "city": "Bar",
                        "state": "Baz",
                        "zip": "90210",
                        "customer_id": 1
                    }
                ]
            }

### Update existing customer [PUT]

+ Request (application/json)

    + Body
    
            {
                "name": "John Doe", 
                "email": "john.doe@example.com",
                "dob": "1970-01-01",
                "phone": "555-555-5555"
            }


+ Response 200 (application/json)

    + Body

            {
                "id": 1,
                "name": "John Doe", 
                "email": "john.doe@example.com",
                "dob": "1970-01-01",
                "phone": "555-555-5555",
                "addresses": []
            }
      
### Delete existing customer [DELETE]

+ Response 200 (application/json)

    + Body

            {
                "id": 1,
                "name": "John Doe", 
                "email": "john.doe@example.com",
                "dob": "1970-01-01",
                "phone": "555-555-5555",
                "addresses": []
            }
      
    
  

# Group Addresses
Properties

| Name        | Type    | Description                |
|:------------|:--------|:---------------------------|
| id          | Integer | Address unique ID          |
| line1       | String  | Address first line         |
| line2       | String  | Address second line        |
| city        | String  | Address city               |
| state       | String  | Address state              |
| zip         | String  | Address zip code           |
| customer_id | Integer | the `id` of the `customer` |

  
    
## Addresses collection [/api/:version/customers/:customer_id/addresses]
Actions on the Addresses resource
      
+ Parameters
        
    + customer_id (required, integer, `1`) - the `id` of the `customer`
      
### Return a list of addresses [GET]

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 1,
                    "line1": "123 Foo Street",
                    "line2": "Suite 456",
                    "city": "Bar",
                    "state": "Baz",
                    "zip": "90210",
                    "customer_id": 1
                }
            ]
      
### Create a new address [POST]

+ Request (application/json)

    + Body

            {
                "line1": "123 Foo Street",
                "line2": "Suite 456",
                "city": "Bar",
                "state": "Baz",
                "zip": "90210"
            }

+ Response 201 (application/json)

    + Body

            {
                "id": 1,
                "line1": "123 Foo Street",
                "line2": "Suite 456",
                "city": "Bar",
                "state": "Baz",
                "zip": "90210",
                "customer_id": 1
            }
      
    
## Addresses single [/api/:version/customers/:customer_id/addresses/:id]
Actions on the Addresses resource
      
+ Parameters
    + customer_id (required, integer, `1`) - the `id` of the `customer`
    + id (required, integer, `1`) - the `id` of the `address`
      
### Return address by id [GET]

+ Response 200 (application/json)

    + Body

            {
                "id": 1,
                "line1": "123 Foo Street",
                "line2": "Suite 456",
                "city": "Bar",
                "state": "Baz",
                "zip": "90210",
                "customer_id": 1
            }
      
### Update existing address [PUT]

+ Request (application/json)

    + Body

            {
                "line1": "123 Foo Street",
                "line2": "Suite 456",
                "city": "Bar",
                "state": "Baz",
                "zip": "90210"
            }

+ Response 200 (application/json)

    + Body

            {
                "id": 1,
                "line1": "123 Foo Street",
                "line2": "Suite 456",
                "city": "Bar",
                "state": "Baz",
                "zip": "90210",
                "customer_id": 1
            }
      
### Delete existing address [DELETE]

+ Response 200 (application/json)

    + Body

            {
                "id": 1,
                "line1": "123 Foo Street",
                "line2": "Suite 456",
                "city": "Bar",
                "state": "Baz",
                "zip": "90210",
                "customer_id": 1
            }